let rec tri_bulle l = let (l2,b) = une_passe l in match l2,b with
        | _, false | [], true -> l2
        | t::q, true -> t::(tri_bulle q);;
 
(* 9 -- TODO *)

(* 10 *)
let une_passe2 l n = 
        let rec aux l b m = match l with 
                | []  -> ([],b,0)
                | [e] -> ([e],b,0) 
                | t1::t2::q -> if t1 <= t2 then let (l2,b2,n2) = aux (t2::q) b (m+1) in (t1::l2, b2, n2) 
                                           else let (l2,b2,n2) = aux (t1::q) true (m+1) in (t2::l2, b2, n2);
        in aux l false n;;

une_passe2 [3;2;1] 0;;

let tri_bulle2 l = 
        let rec aux l n = let (l2,b,n2) = une_passe2 l n in match l2,b with
                | _, false | [], true -> (l2,n2)
                | t::q, true -> let (l3,n3) = aux q n2 in (t::l3,n3);
        in aux l 0;;

(* 11 -- TODO *)

(* 12 -- TODO *)
 
if t1 <= t2 then begin b:= true; t2::(aux (t1::q)) end
                                           else t1::(aux (t2::q));

